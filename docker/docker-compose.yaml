version: '3.8'

services:
  spark-master:
    container_name: spark-master
    build: 
      context: .
      dockerfile: Dockerfile
    entrypoint: ['./entrypoints.sh', 'master']
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./book_data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    env_file:
      - .env.spark
    ports:
      - '192.168.1.13:8080:8080'
      - '192.168.1.13:7077:7077'
    networks:
      - spark-network

  spark-history-server:
    container_name: spark-history
    build: 
      context: .
      dockerfile: Dockerfile
    entrypoint: ['./entrypoints.sh', 'history']
    env_file:
      - .env.spark
    volumes:
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'
    depends_on:
      - spark-master
    networks:
      - spark-network

  spark-worker:
    container_name: spark-worker
    build: 
      context: .
      dockerfile: Dockerfile
    entrypoint: ['./entrypoints.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./book_data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    ports:
      - '8081:8081'
    networks:
      - spark-network

  jupyter:
    container_name: jupyter
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../notebooks:/opt/spark/notebooks
    entrypoint: [
      'jupyter',
      'lab',
      '--ip',
      '0.0.0.0',
      '--port',
      '8888',
      '--allow-root'
    ]
    ports:
      - '8888:8888'
    networks:
      - spark-network

volumes:
  spark-logs:

networks:
  spark-network: